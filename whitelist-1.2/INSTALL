Whitelist/Modlist Extension for Sympa 6.2

Steve Shipway, University of Auckland, 2012 - 2015

This adds Whitelist and Modlist functionality to Sympa, by using an included
scenario, and a custom action module to hold the required Perl code.

Note that this will only work in Sympa 6.2.x and not under 6.1.x

Installing:

NOTE: Your installation may use different directories to hold the various
files.  Change the paths to what is appropriate for your system.

1. Copy whitelist.pm and modlist.pm to the custom_actions directory.
   These are the custom actions.  If you only copy the whitelist.pm then
   modlist functionality will be disabled.  Either put them at the top level,
   or at robot level as you prefer.

2. Create default empty whitelist.txt and modlist.txt files in 
   search_filters (or wherever your Sympa search_filters path is).
   These must exist as a default for lists that do not have a defined whitelist
   or modlist.

3. Install the whitelist.tt2 template and the whitelist/ and fr/ directories into
   the web_tt2 directory. This is the admin pages for the whitelist and modlist.
   It goes into your web_tt2 customisation directory.

4. Update nav.tt2 on your system.  This is where you add the new Whitelist
   and Modlist menu items.  
   Add [% PROCESS whitelist/nav.tt2 %] to it, right after the blacklist part.

                [% IF conf.use_blacklist != 'none' %]
                    [% IF action == 'blacklist' %]
                        [% SET class = 'active' %]
                    [% ELSE %]
                        [% SET class = '' %]
                    [% END %]
                    <li class="[% class %]">
                        <a href="[% 'blacklist' | url_rel([list]) %]" >
                            [%|loc%]Blacklist[%END%]
                        </a>
                    </li>
                [% END %]
            [% PROCESS whitelist/nav.tt2 %]

   You also need to update the Basic Operations header test around line 214.
   Change the line that reads:

      [% IF action == 'admin' || action_type == 'admin' || action == 'editfile' ~%]

   Replace it with:

      [% IF action == 'admin' || action_type == 'admin' || action == 'editfile' || ( action == 'lca'  && ( custom_action == 'whitelist' || custom_action == 'modlist' ) ) ~%]


5. Update search.tt2 and review.tt2.  These add the Whitelist and Modlist
   buttons to the subscribers review page.
   Add [% PROCESS whitelist/links.tt2 %] to those files, right after the
   blacklist part.

    [% IF conf.use_blacklist != 'none' %]
        <a class="actionMenuLinks" href="[% 'blacklist' | url_rel([list]) %]">
            [%|loc%]Blacklist[%END%]
        </a>
    [% END %]
   [% PROCESS whitelist/links.tt2 %]

6. Update admin.t22.  This adds the white/modlist options to the list admin
   page.  This is optional but recommended.
   Add [% PROCESS whitelist/admin.tt2 %] to it, right after the blacklist part.
   Be sure to add it inside the [% IF is_listmaster || is_owner || may_del %]
   part.

        [% IF conf.use_blacklist != 'none' %]
            <li>
                <strong><a href="[% 'blacklist' | url_rel([list]) %]" >[%|loc%]Blacklist:[%END%]</a></strong>
                [%|loc%]Handles the set of black-listed mail addresses for this list.[%END%]
            </li>
        [% END %]
     [% PROCESS whitelist/admin.tt2 %]
   [% END %]

7. Copy include.send.header into your scenari directory.  This
   activates the Whitelist and Modlist on all lists, though until you define
   some entries, all lists will get the default empty files you set up in
   step 2.

8. Restart the Sympa daemons, and restart your web server.  This will pick up 
   the changes.

9. TEST!  Choose a list and verify that the Whitelist and Modlist tabs appear 
   in the admin page.  Try adding an entry to the whitelist and verify that 
   it works and produces no errors.  Make sure the tabs appear for Whitelist
   and Modlist in the web interface for list owners and admins.

Caveats:

The new white/modlist admin pages are in English and do not have translations.
You might be able to update them yourself to help with this.

Make sure file ownerships are correct.

Internationalization:

Just like the fr directory, create a directory named after the desired locale,
copy the plugin templates in it and translate them.

The future:

There will be the ability to add buttons to the Modindex page to allow items
to be added to the whitelist at the click of a button.

